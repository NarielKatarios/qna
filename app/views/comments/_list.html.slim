= render poly_model.comments
ul
  - poly_model.comments.each do |comment|
    - if comment.persisted?
      li
        i
          - if comment.user
            = comment.user.email + ': '
          - else
            = 'No user: '

        = comment.body
      p
        - if current_user == comment.user
          p= link_to 'Delete', comment_path(comment.id, "#{poly_model.class.to_s.downcase}_id" => poly_model.id), method: :delete, data: {confirm: 'Are you sure?'}, remote: true

  p
    - if current_user
      - if poly_model.is_a? Question
        = form_for [poly_model, poly_model.comments.new], remote: true do |form|
          .field
            = form.label :body, 'Question comment'
            = form.text_area :body
          = form.submit 'Save question comment'
      - else
        = form_for Comment.new, url: answer_comments_path(question_id: poly_model.question.id, answer_id: poly_model.id), method: :post, remote: true do |form|
          .field
            = form.label :body, 'Answer comment'
            = form.text_area :body
          = form.submit 'Save answer comment'